* Lectures
** <2017-07-26 Wed> 
*** Handling Command Line Arguments

Use =sscanf= to handle command line arguments and error checking. Here is a
example calendar app that gets months. We first check that we receive the
correct number of command line arguments. We then check that the command line
arguments are valid by assigning it to an integer and checking the return status
of that assignment.

#+BEGIN_SRC C
  #include <stdio.h>
  #include <stdlib.h>

  int main(int argc, char *argv[])
  {
      char * monthStr;
      if(argc != 2){
          fprintf(stderr, "Usage: month 1...12 \n");
          return EXIT_FAILURE;
      }
      int count;
      int num;
      //assignment and error checking is handled in the one line
      if((count = sscanf(argv[1], "%d", &num)) == 0){
          fprintf(stderr, "Usage: month 1...12 \n");
          return EXIT_FAILURE;
      }

      switch(num){
          case 1: monthStr = "January"; break;
          case 2: monthStr = "February"; break;
          case 3: monthStr = "March"; break;
          case 4: monthStr = "April"; break;
          case 5: monthStr = "May"; break;
          case 6: monthStr = "June"; break;
          case 7: monthStr = "July"; break;
          case 8: monthStr = "August"; break;
          case 9: monthStr = "September"; break;
          case 10: monthStr = "October"; break;
          case 11: monthStr = "November"; break;
          case 12: monthStr = "December"; break;
      }

      printf("%s\n", monthStr);

      return EXIT_SUCCESS;
  }
#+END_SRC
